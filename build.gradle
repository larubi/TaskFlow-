plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.0'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.tuproyecto.gestiontareas'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(22)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5' // API para JWT
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5' // Implementación de JWT
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5' // Para serialización/deserialización JSON de JWT

	// Driver para PostgreSQL
	implementation 'org.postgresql:postgresql'

	// Dependencias de Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// Dependencias para Springdoc OpenAPI (Swagger)
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'

	// Driver para H2, utilizado solo en tests
	testImplementation 'com.h2database:h2'
}

tasks.named('test') {
	useJUnitPlatform()
}
jar {
	duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

bootJar {
	duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}
